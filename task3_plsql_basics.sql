-- Задание к лабораторной работе (вариант 27)

-- При создании следует выполнить следующие минимальные требования к синтаксису:
--  - использовать явный курсор или курсорную переменную, а также ат-рибуты курсора;
--  - использовать пакет DBMS_OUTPUT для вывода результатов работы в SQL*Plus;
--  - предусмотреть секцию обработки исключительных ситуаций,
--    причем обязательно использовать как предустановленные исключительные ситуации,
--    так и собственные (например, стоит контролировать наличие в БД значений,
--    передаваемых в процедуры и функции как параметры);

-- 1.	Создать процедуру.
-- Создать процедуру, копирующую строки с информацией о строительстве в текущем месяце во вспомогательную таблицу.
-- Подсчитать количество извле-ченных строк.

UPDATE LW1_PROJECT
SET START_DATE = TO_DATE('01.11.2024', 'dd.mm.YYYY'), "DATE" = TO_DATE('31.12.2024', 'dd.mm.YYYY')
WHERE ID IN (1, 2, 3);

CREATE TABLE LW1_project_current_month(
      id NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
      client_id NUMBER NOT NULL,
      team_id NUMBER NOT NULL,
      type VARCHAR2(255) NOT NULL,
      price DECIMAL(38, 2) NOT NULL,
      start_date DATE NOT NULL,
      "DATE" DATE NOT NULL,

      CONSTRAINT pk_lw1_project_cm PRIMARY KEY (id),
      CONSTRAINT fk_lw1_project_cm_on_client FOREIGN KEY (client_id) REFERENCES LW1_client (id),
      CONSTRAINT fk_lw1_project_cm_on_team FOREIGN KEY (team_id) REFERENCES LW1_team (id)
);

CREATE OR REPLACE PROCEDURE LW4_copy_current_month_projects
    IS
    -- Объявление курсора
    CURSOR proj_cursor IS
        SELECT *
        FROM LW1_project
        WHERE SYSDATE >= START_DATE AND SYSDATE <= "DATE";

    -- Переменная-строка
    proj_rec LW1_PROJECT%rowtype;

    -- Переменные
    v_exists NUMBER;
    no_data_found EXCEPTION;
BEGIN
    -- Проверка наличия данных в исходной таблице
    SELECT COUNT(*) INTO v_exists
    FROM LW1_project
    WHERE SYSDATE >= START_DATE AND SYSDATE <= "DATE";

    IF v_exists = 0 THEN
        RAISE no_data_found;
    END IF;

    EXECUTE IMMEDIATE 'TRUNCATE TABLE LW1_PROJECT_CURRENT_MONTH';

    -- Копирование данных с использованием курсора
    OPEN proj_cursor;
    LOOP
        FETCH proj_cursor INTO proj_rec;
        IF proj_cursor%FOUND THEN
            INSERT INTO LW1_project_current_month VALUES
                (
                    proj_rec.id,
                    proj_rec.client_id,
                    proj_rec.team_id,
                    proj_rec.type,
                    proj_rec.price,
                    proj_rec.start_date,
                    proj_rec."DATE"
                );
        ELSE
            EXIT;
        END IF;
    END LOOP;

    -- Вывод результата
    DBMS_OUTPUT.PUT_LINE('Скопировано строк: ' || proj_cursor%ROWCOUNT);

    CLOSE proj_cursor;
EXCEPTION
    WHEN no_data_found THEN
        DBMS_OUTPUT.PUT_LINE('Нет проектов в текущем месяце');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Произошла ошибка: ' || SQLERRM);
END;

-- Включение вывода через DBMS_OUTPUT!
SET SERVEROUTPUT ON;

-- Выполнение процедуры!
CALL LW4_copy_current_month_projects();

-- 2.	Создать функцию.
-- Создать функцию, подсчитывающую, сколько проектов завершено по каждой команде.
-- Вернуть количество команд, по которым завершены все проекты.

-- Оригинальное задание: Создать функцию, подсчитывающую, сколько этапов выполнено по
-- каждому объекту. Вернуть количество объектов, по которым завершены все этапы

-- В индивидуальной БД нет сущности этапов, потому задание изменено, чтобы использовать другие
-- таблицы, но сохранить суть.

CREATE OR REPLACE FUNCTION LW4_count_teams_completed_projects
    RETURN NUMBER
    IS
    -- Курсор для подсчета проектов по командам
    CURSOR team_projects_cur IS
        SELECT
            t.id as team_id,
            t.name as team_name,
            COUNT(p.id) as total_projects,
            SUM(CASE
                    WHEN p."DATE" <= SYSDATE THEN 1
                    ELSE 0
                END) as completed_projects
        FROM LW1_team t
                 LEFT JOIN LW1_project p ON t.id = p.team_id
        GROUP BY t.id, t.name;

    -- Переменные
    team_rec team_projects_cur%rowtype;
    v_teams_all_completed NUMBER := 0;
    v_exists NUMBER;
    no_teams_exception EXCEPTION;

BEGIN
    -- Проверка наличия команд
    SELECT COUNT(*) INTO v_exists FROM LW1_team;

    IF v_exists = 0 THEN
        RAISE no_teams_exception;
    END IF;

    OPEN team_projects_cur;
    -- Обход курсора и подсчет команд
    LOOP
        FETCH team_projects_cur INTO team_rec;
        IF team_projects_cur%FOUND THEN
            -- Вывод информации по каждой команде
            DBMS_OUTPUT.PUT_LINE('Команда: ' || team_rec.team_name);
            DBMS_OUTPUT.PUT_LINE('Всего проектов: ' || team_rec.total_projects);
            DBMS_OUTPUT.PUT_LINE('Завершенных проектов: ' || team_rec.completed_projects);
            DBMS_OUTPUT.PUT_LINE('------------------------');

            -- Если все проекты команды завершены и у команды есть проекты
            IF team_rec.completed_projects = team_rec.total_projects
                AND team_rec.total_projects > 0 THEN
                v_teams_all_completed := v_teams_all_completed + 1;
            END IF;
        ELSE
            EXIT;
        END IF;
    END LOOP;

    RETURN v_teams_all_completed;

EXCEPTION
    WHEN no_teams_exception THEN
        DBMS_OUTPUT.PUT_LINE('В базе данных нет команд');
        RETURN 0;
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Произошла ошибка: ' || SQLERRM);
        RETURN -1;
END;

-- Пример использования функции в анонимном блоке!
DECLARE
    v_result NUMBER;
BEGIN
    v_result := LW4_count_teams_completed_projects();
    DBMS_OUTPUT.PUT_LINE('Функция вернула: ' || v_result);
END;

-- Пример использования функции в запросе!
SELECT LW4_COUNT_TEAMS_COMPLETED_PROJECTS() FROM DUAL;

-- 3.	Создать локальную программу, изменив код ранее написанной про-цедуры или функции.

CREATE OR REPLACE PROCEDURE LW4_copy_current_month_projects
    IS
    -- Объявление курсора
    CURSOR proj_cursor IS
        SELECT *
        FROM LW1_project
        WHERE SYSDATE >= START_DATE AND SYSDATE <= "DATE";

    proj_rec LW1_PROJECT%rowtype;

    -- Переменные
    v_exists NUMBER;
    no_data_found EXCEPTION;

    PROCEDURE CHECK_DATA_EXISTENCE IS
    BEGIN
        -- Проверка наличия данных в исходной таблице
        SELECT COUNT(*) INTO v_exists
        FROM LW1_project
        WHERE SYSDATE >= START_DATE AND SYSDATE <= "DATE";

        IF v_exists = 0 THEN
            RAISE no_data_found;
        END IF;
    END;

    PROCEDURE CLEAN_TABLE IS
    BEGIN
        EXECUTE IMMEDIATE 'TRUNCATE TABLE LW1_PROJECT_CURRENT_MONTH';
    END;

    PROCEDURE COPY_DATA IS
    BEGIN
        -- Копирование данных с использованием курсора
        OPEN proj_cursor;
        LOOP
            FETCH proj_cursor INTO proj_rec;
            IF proj_cursor%FOUND THEN
                INSERT INTO LW1_project_current_month VALUES
                    (
                        proj_rec.id,
                        proj_rec.client_id,
                        proj_rec.team_id,
                        proj_rec.type,
                        proj_rec.price,
                        proj_rec.start_date,
                        proj_rec."DATE"
                    );
            ELSE
                EXIT;
            END IF;
        END LOOP;
        -- Вывод результата
        DBMS_OUTPUT.PUT_LINE('Скопировано строк: ' || proj_cursor%ROWCOUNT);
        CLOSE proj_cursor;
    END;

BEGIN
    CHECK_DATA_EXISTENCE();
    CLEAN_TABLE();
    COPY_DATA();
EXCEPTION
    WHEN no_data_found THEN
        DBMS_OUTPUT.PUT_LINE('Нет проектов в текущем месяце');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Произошла ошибка: ' || SQLERRM);
END;

CALL LW4_copy_current_month_projects();

-- 4.	Написать перегруженные программы, используя для этого ранее со-зданную процедуру или функцию.
-- 5.	Объединить все процедуры и функции, в том числе перегруженные, в пакет.

CREATE OR REPLACE PACKAGE LW4 AS
    PROCEDURE copy_current_month_projects;
    PROCEDURE copy_current_month_projects(p_current_date DATE);
    FUNCTION count_teams_completed_projects RETURN NUMBER;
END LW4;

CREATE OR REPLACE PACKAGE BODY LW4 AS
    FUNCTION count_teams_completed_projects RETURN NUMBER IS
    BEGIN
        RETURN LW4_count_teams_completed_projects();
    END;

    PROCEDURE copy_current_month_projects IS
    BEGIN
        LW4_copy_current_month_projects();
    END;

    -- Перегруженная программа
    PROCEDURE copy_current_month_projects(p_current_date DATE) IS
        -- Объявление курсора
        CURSOR proj_cursor IS
            SELECT *
            FROM LW1_project
            WHERE p_current_date >= START_DATE AND p_current_date <= "DATE";

        proj_rec LW1_PROJECT%rowtype;

        -- Переменные
        v_exists NUMBER;
        no_data_found EXCEPTION;

        PROCEDURE CHECK_PARAMETERS IS
        BEGIN
            IF p_current_date IS NULL THEN
                RAISE VALUE_ERROR;
            end if;
        END;

        PROCEDURE CHECK_DATA_EXISTENCE IS
        BEGIN
            -- Проверка наличия данных в исходной таблице
            SELECT COUNT(*) INTO v_exists
            FROM LW1_project
            WHERE p_current_date >= LW1_PROJECT.START_DATE AND p_current_date <= LW1_PROJECT."DATE";

            IF v_exists = 0 THEN
                RAISE no_data_found;
            END IF;
        END;

        PROCEDURE CLEAN_TABLE IS
        BEGIN
            EXECUTE IMMEDIATE 'TRUNCATE TABLE LW1_PROJECT_CURRENT_MONTH';
        END;

        PROCEDURE COPY_DATA IS
        BEGIN
            -- Копирование данных с использованием курсора
            OPEN proj_cursor;
            LOOP
                FETCH proj_cursor INTO proj_rec;
                IF proj_cursor%FOUND THEN
                    INSERT INTO LW1_project_current_month VALUES
                        (
                            proj_rec.id,
                            proj_rec.client_id,
                            proj_rec.team_id,
                            proj_rec.type,
                            proj_rec.price,
                            proj_rec.start_date,
                            proj_rec."DATE"
                        );
                ELSE
                    EXIT;
                END IF;
            END LOOP;
            -- Вывод результата
            DBMS_OUTPUT.PUT_LINE('Скопировано строк: ' || proj_cursor%ROWCOUNT);
            CLOSE proj_cursor;
        END;

    BEGIN
        CHECK_PARAMETERS();
        CHECK_DATA_EXISTENCE();
        CLEAN_TABLE();
        COPY_DATA();
    EXCEPTION
        WHEN no_data_found THEN
            DBMS_OUTPUT.PUT_LINE('Нет проектов в текущем месяце');
        WHEN value_error THEN
            DBMS_OUTPUT.PUT_LINE('Неверные входные параметры');
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('Произошла ошибка: ' || SQLERRM);
    END;
END LW4;

-- 6.	Написать анонимный PL/SQL-блок, в котором будут вызовы реализованных функций и процедур пакета
-- с различными характерными значениями параметров для проверки правильности работы основных задач
-- и обработки исключительных ситуаций!

DECLARE
    v_result NUMBER;
BEGIN
    DBMS_OUTPUT.PUT_LINE('Вызов процедуры копирования проектов в работе на данный момент во вспомогательную таблицу:');
    LW4.copy_current_month_projects();

    DBMS_OUTPUT.PUT_LINE('Вызов процедуры копирования проектов в работе на данную дату во вспомогательную таблицу (успешный):');
    LW4.copy_current_month_projects(p_current_date => TO_DATE('10.11.2024', 'dd.mm.YYYY'));

    DBMS_OUTPUT.PUT_LINE('Вызов процедуры копирования проектов в работе на данную дату во вспомогательную таблицу (проектов нет):');
    LW4.copy_current_month_projects(p_current_date => TO_DATE('10.11.2002', 'dd.mm.YYYY'));

    DBMS_OUTPUT.PUT_LINE('Вызов процедуры копирования проектов в работе на данную дату во вспомогательную таблицу (некорректный параметр):');
    LW4.copy_current_month_projects(p_current_date => NULL);

    DBMS_OUTPUT.PUT_LINE('Вызов функции подсчета завершенных проектов:');
    v_result := LW4.count_teams_completed_projects();
    DBMS_OUTPUT.PUT_LINE('Функция вернула количество команд, у которых все проекты завершены: ' || v_result);
END;
